#  Copyright (c) 2012
#  by authors as mentioned on:
#  https://github.com/lkastner/polymake_algebra/wiki/Authors
#  
#  Project home:
#  https://github.com/lkastner/polymake_algebra
#
#  For licensing we cite the original Polymake code:
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; either version 2, or (at your option) any
#  later version: http://www.gnu.org/licenses/gpl.txt.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.



# Note:
# So far we assume all ideals living in a polynomial ring with a global
# monomial ordering. If you need something else please contact the authors. 
object Ideal {

	property DEPTH : Int;

	property DIM : Int;

   # @category ??
   # A set of generators usually given by the user and in no way unique.
	property GENERATORS : Array<Polynomial>;
	
   # @category ??
   # Subobject containing properties that depend on the monomial ordering of the ring.
	property GROEBNER : Groebner : multiple;

	property HILBERT_POLYNOMIAL : Polynomial;

	property HOMOGENEOUS : Bool;

   # @category ??
   # Can the ideal be generated by monomials?
   property MONOMIAL : Bool;

   # @category ??
   # Is the ideal a prime ideal?
	property PRIME : Bool;

   # @category ??
	# Is the ideal a primary ideal? I.e. its radical is prime and in the quotient ring by
   # the ideal every zero divisor is nilpotent.
   property PRIMARY : Bool;

	property PRIMARY_DECOMPOSITION : Ideal : multiple;

   # @category ??
	# The radical of the ideal.
   property RADICAL : Ideal;

   # @category ??
	# The ambient (polynomial) ring containing the ideal.
   property RING : Ring;

	property ZERO : Bool;

   # This object contains all properties of an ideal that depend on the monomial ordering.
   object Groebner {

      property GROEBNER_BASIS : Array<Polynomial>;

      property INITIAL_IDEAL : Ideal;

      property MONOMIAL_ORDERING : Matrix<Int>;

   }

}

